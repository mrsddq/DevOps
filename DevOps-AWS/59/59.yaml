---
 - name: variable-playbook
   hosts: server-2
   vars:
     name: laraib
     number: 23
   tasks:
     - name: using debug module
       debug:
         msg: "The value of number is: {{number}}" #string interpolation/jinja template
     - name: using debug module for name
       debug:
         msg: "Hello {{name}} !!!"
...
---
  - hosts: server-2
    tasks:
      - shell: ls /tmp
        register: out #

      - debug:
          msg: "{{out.stdout_lines}}"
...
---
- name: Server Details
  hosts: server-2
  remote_user: ansadmin

  tasks:
  - name: Remove httpd
    yum: pkg=httpd state=absent

  - name: Install httpd
    yum: pkg=httpd state=present

  - name: Execute shell command date
    command: date

  - name: Execute shell script
    script: test_script.sh
    
  - name: display content 
    command: cat /home/ansadmin/sample.txt
    
  - name: display content by changing dir
    command: cat sample.txt chdir=/home/ansadmin
    
  - name: makes
    command: mkdir /home/ansadmin/new-dir creates=/home/ansadmin/new-dir
...
---
- hosts: all
  become: yes
  tasks:
#### conditons
    - name: install a webserver redhat/centos
      yum:
        name: httpd
        state: latest
      when: ansible_distribution == 'RedHat'
    - name: start the service
      service:
         name: httpd
         state: started
      when: ansible_distribution == 'RedHat'
      
    - name: install a webserver on ubuntu
      apt:
        name: apache2
        state: latest
      when: ansible_distribution == 'Ubuntu'
    - name: start the service
      service:
         name: apache2
         state: started
      when: ansible_distribution == 'Ubuntu'

    - name: install a webserver Amazon
      yum:
        name: httpd
        state: latest
      when: ansible_distribution == 'Amazon'
    - name: start the service
      service:
         name: httpd
         state: started
      when: ansible_distribution == 'Amazon'

=============================================================================================
---
- hosts: test-server
  tasks:
    - name: stop nginx if running 
      service:
          name: nginx
          state: stopped
          
    - name: uninstall nginx if already installed on ubuntu
      apt: 
          name: nginx 
          state: absent
      when: ansible_os_family == "ubuntu" and ansible_distribution_version == "20.04"

    - name: uninstall nginx on redhat/amazon
      apt: 
          name: nginx 
          state: absent
      when: ansible_os_family == "Redhat" || ansible_os_family == "Amazon"
      
    - name: install nginx on ubuntu
      apt: 
          name: nginx 
          state: present
      when: ansible_os_family == "ubuntu" and ansible_distribution_version == "20.04"
      
    - name: install nginx on redhat/amazon
      apt: 
          name: nginx 
          state: present
      when: ansible_os_family == "Redhat" || ansible_os_family == "Amazon"
      
    - name: start nginx service
      service:
          name: nginx
          state: started